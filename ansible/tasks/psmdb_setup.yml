---
# Setup tasks for Percona Server for MongoDB
# Based on the original install_deps function

# === RedHat specific tasks ===
- name: Install RHEL repositories and packages
  when: os_type == "rpm"
  block:
    - name: Fix CentOS 7 mirrors if needed
      when: rhel_version == "7" 
      shell: |
        sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
        sed -i 's|#\s*baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
      ignore_errors: yes
      
    - name: Install EPEL repository
      yum:
        name: epel-release
        state: present

    - name: Enable Percona repository
      when: arch == "x86_64"
      yum:
        name: https://repo.percona.com/yum/percona-release-latest.noarch.rpm
        state: present
        
    - name: Enable Percona tools testing repository
      when: arch == "x86_64"
      command: percona-release enable tools testing

    - name: Install patchelf
      when: arch == "x86_64"
      yum:
        name: patchelf
        state: present

    - name: Install RHEL 7 specific packages
      when: rhel_version == "7"
      block:
        - name: Install RHEL7 build dependencies
          yum:
            name:
              - rpmbuild
              - rpm-build
              - libpcap-devel
              - gcc
              - make
              - cmake
              - gcc-c++
              - openssl-devel
              - cyrus-sasl-devel
              - cyrus-sasl-plain
              - snappy-devel
              - zlib-devel
              - bzip2-devel
              - scons
              - rpmlint
              - git
              - libopcodes
              - libcurl-devel
              - e2fsprogs-devel
              - expat-devel
              - lz4-devel
              - which
              - openldap-devel
              - krb5-devel
              - xz-devel
              - libzstd
            state: present

        - name: Install SCL repository
          yum:
            name: centos-release-scl
            state: present

        - name: Enable SCL testing repository
          command: yum-config-manager --enable centos-sclo-rh-testing

        - name: Install developer toolsets
          yum:
            name:
              - devtoolset-9
              - devtoolset-11-elfutils
              - devtoolset-11-dwz
            state: present

        - name: Source devtoolset-9 and devtoolset-11
          lineinfile:
            path: /home/{{ custom_user }}/.bashrc
            line: "source /opt/rh/devtoolset-9/enable && source /opt/rh/devtoolset-11/enable"
            create: yes

    - name: Install RHEL 8 specific packages
      when: rhel_version == "8"
      block:
        - name: Enable CodeReady Builder repository
          command: yum-config-manager --enable ol8_codeready_builder
          ignore_errors: yes

        - name: Install RHEL8 build dependencies
          yum:
            name:
              - bzip2-devel
              - libpcap-devel
              - snappy-devel
              - rpm-build
              - rpmlint
              - cmake
              - cyrus-sasl-devel
              - make
              - openssl-devel
              - zlib-devel
              - libcurl-devel
              - git
              - which
              - redhat-rpm-config
              - e2fsprogs-devel
              - expat-devel
              - lz4-devel
              - openldap-devel
              - krb5-devel
              - xz-devel
              - gcc-toolset-9
              - gcc-c++
              - gcc-toolset-11-dwz
              - gcc-toolset-11-elfutils
            state: present

        - name: Create symlink for scons
          file:
            src: /usr/bin/scons-3
            dest: /usr/bin/scons
            state: link
            force: yes

        - name: Source gcc-toolset-9 and gcc-toolset-11
          lineinfile:
            path: /home/{{ custom_user }}/.bashrc
            line: "source /opt/rh/gcc-toolset-9/enable && source /opt/rh/gcc-toolset-11/enable"
            create: yes

    - name: Install RHEL 9 specific packages
      when: rhel_version == "9"
      block:
        - name: Enable CodeReady Builder repository
          command: dnf config-manager --enable ol9_codeready_builder
          ignore_errors: yes

        - name: Install EPEL for RHEL 9
          yum:
            name: oracle-epel-release-el9
            state: present

        - name: Install RHEL9 build dependencies
          yum:
            name:
              - bzip2-devel
              - libpcap-devel
              - snappy-devel
              - gcc
              - gcc-c++
              - rpm-build
              - rpmlint
              - cmake
              - cyrus-sasl-devel
              - make
              - openssl-devel
              - zlib-devel
              - libcurl-devel
              - git
              - python3
              - python3-scons
              - python3-pip
              - python3-devel
              - redhat-rpm-config
              - which
              - e2fsprogs-devel
              - expat-devel
              - lz4-devel
              - openldap-devel
              - krb5-devel
              - xz-devel
              - perl
            state: present

# === Debian/Ubuntu specific tasks ===
- name: Install Debian/Ubuntu packages
  when: os_type == "deb"
  block:
    - name: Download Percona Release package
      get_url:
        url: https://repo.percona.com/apt/pool/main/p/percona-release/percona-release_1.0-27.generic_all.deb
        dest: /tmp/percona-release_1.0-27.generic_all.deb
        
    - name: Install Percona Release package
      apt:
        deb: /tmp/percona-release_1.0-27.generic_all.deb
        
    - name: Enable Percona tools testing repository
      command: percona-release enable tools testing
      
    - name: Update apt repositories again
      apt:
        update_cache: yes

    - name: Set focal specific package list
      when: os_name == "focal"
      set_fact:
        extra_packages: "dh-systemd"
        
    - name: Set empty extra package list
      when: os_name != "focal"
      set_fact:
        extra_packages: ""

    - name: Install Debian/Ubuntu build dependencies
      apt:
        name:
          - git
          - valgrind
          - scons
          - liblz4-dev
          - devscripts
          - debhelper
          - debconf
          - libpcap-dev
          - libbz2-dev
          - libsnappy-dev
          - pkg-config
          - zlib1g-dev
          - libzlcore-dev
          - libsasl2-dev
          - gcc
          - g++
          - cmake
          - curl
          - libssl-dev
          - libcurl4-openssl-dev
          - libldap2-dev
          - libkrb5-dev
          - liblzma-dev
          - patchelf
          - libexpat1-dev
          - sudo
          - libfile-copy-recursive-perl
          - "{{ extra_packages }}"
        state: present

    - name: Install e2fs libraries
      apt:
        name: libext2fs-dev
        state: present
      ignore_errors: yes
      
    - name: Install e2fs legacy libraries if needed
      apt:
        name: e2fslibs-dev
        state: present
      failed_when: false

# Install Python packages for all platforms
- name: Install pip
  when: os_type == "deb" or (os_type == "rpm" and rhel_version in ["8", "9"])
  pip:
    name: pip
    state: latest
    executable: pip3

- name: Install PyYAML with no-build-isolation for PSMDB
  pip:
    name: pyyaml==5.4.1
    extra_args: --no-build-isolation
    executable: pip3

- name: Install Python packages for PSMDB
  pip:
    name:
      - setuptools
      - typing
      - regex
      - Cheetah3
    executable: pip3
    extra_args: "{{ '--user' if os_type == 'rpm' else '' }}"
  become: "{{ true if os_type == 'deb' else false }}"
  become_user: "{{ custom_user if os_type == 'rpm' else omit }}"

# === Common tasks for all platforms ===
- name: Download curl source
  get_url:
    url: https://curl.se/download/curl-7.77.0.tar.gz
    dest: /tmp/curl-7.77.0.tar.gz

- name: Extract curl source
  unarchive:
    src: /tmp/curl-7.77.0.tar.gz
    dest: /tmp
    remote_src: yes
    
- name: Build and install curl from source
  shell: |
    cd /tmp/curl-7.77.0
    ./configure --with-openssl
    make -j$(nproc)
    make install
  args:
    creates: /usr/local/bin/curl

# Install MongoDB Toolchain
- name: Download MongoDB Toolchain installer
  get_url:
    url: https://downloads.percona.com/downloads/TESTING/issue-CUSTO83/toolchain_installer.tar.gz
    dest: /tmp/toolchain_installer.tar.gz
    
- name: Extract toolchain installer
  unarchive:
    src: /tmp/toolchain_installer.tar.gz
    dest: /tmp
    remote_src: yes
    
- name: Install MongoDB Toolchain
  shell: |
    cd /tmp
    export USER={{ custom_user }}
    bash -x ./installer.sh -k --download-url {{ mongodb_toolchain_url }}/{{ os_name }}_mongodbtoolchain_{{ arch }}.tar.gz
  args:
    creates: /opt/mongodbtoolchain/v4/bin/gcc

# Install Go for MongoDB tools
- name: Set Go architecture variable
  set_fact:
    go_arch: "{{ 'amd64' if arch == 'x86_64' else 'arm64' if arch == 'aarch64' else 'amd64' }}"
    
- name: Download Go {{ go_version }}
  get_url:
    url: "https://golang.org/dl/go{{ go_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp/golang{{ go_version }}.tar.gz"
    
- name: Remove existing Go installations
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /usr/local/go1.22
    - /usr/local/go1.19
    - /usr/local/go1.11
    - /usr/local/go1.8
    - /usr/local/go1.9
    - /usr/local/go1.9.2
    - /usr/local/go
    
- name: Extract Go
  shell: tar --transform=s,go,go1.22, -zxf /tmp/golang{{ go_version }}.tar.gz -C /usr/local
  args:
    creates: /usr/local/go1.22
    
- name: Create Go symlink
  file:
    src: /usr/local/go1.22
    dest: /usr/local/go
    state: link

# AWS SDK Build for MongoDB
- name: Clone AWS SDK
  git:
    repo: https://github.com/aws/aws-sdk-cpp.git
    dest: /tmp/aws-sdk-cpp
    version: 1.9.379
    
- name: Initialize AWS SDK submodules
  command: git submodule update --init --recursive
  args:
    chdir: /tmp/aws-sdk-cpp
    
- name: Patch AWS SDK for RHEL
  when: os_type == "rpm" and rhel_version in ["7", "8", "9"]
  shell: |
    sed -i 's:v0.4.42:v0.6.10:' third-party/CMakeLists.txt
    sed -i 's:"-Werror" ::' cmake/compiler_settings.cmake
  args:
    chdir: /tmp/aws-sdk-cpp
    
- name: Create AWS SDK build directory
  file:
    path: /tmp/aws-sdk-cpp/build
    state: directory
    
- name: Set up environment variables for AWS SDK build
  lineinfile:
    path: /tmp/aws-sdk-build-env.sh
    create: yes
    line: |
      export CC=/opt/mongodbtoolchain/v4/bin/gcc
      export CXX=/opt/mongodbtoolchain/v4/bin/g++
      {% if os_name == 'jammy' or os_name == 'bookworm' %}
      export CMAKE_CXX_FLAGS=" -Wno-error=maybe-uninitialized -Wno-error=deprecated-declarations -Wno-error=uninitialized "
      export CMAKE_C_FLAGS=" -Wno-error=maybe-uninitialized -Wno-error=maybe-uninitialized -Wno-error=uninitialized "
      {% endif %}
    mode: 0755

- name: Build AWS SDK
  shell: |
    cd /tmp/aws-sdk-cpp/build
    source /tmp/aws-sdk-build-env.sh
    cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_ONLY="s3;transfer" -DBUILD_SHARED_LIBS=OFF -DMINIMIZE_SIZE=ON
    make -j$(nproc)
    make install
  args:
    creates: /usr/local/lib/libaws-cpp-sdk-s3.a

# Add MongoDB specific environment variables
- name: Set MongoDB environment variables
  lineinfile:
    path: /home/{{ custom_user }}/.bashrc
    line: "{{ item }}"
    create: yes
  with_items:
    - 'export PATH="/usr/local/go/bin:/opt/mongodbtoolchain/v4/bin:$PATH"'
    - 'export GOROOT="/usr/local/go"'
    - 'export GOPATH="/home/{{ custom_user }}/go"'
    - 'export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"'
    - 'export OPT_LINKFLAGS="-Wl,--build-id=sha1 -B/opt/mongodbtoolchain/v4/bin"'
